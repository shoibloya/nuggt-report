import jsPDF from "jspdf";
import autoTable from "jspdf-autotable";

// Suppose you have a function that receives queries + extracted data:
export function handleDownloadPdf(
  queries: {
    search: string;
    content: string;
    citations: string[];
  }[],
  extractedData: any
) {
  // 1) Create a new jsPDF instance
  const doc = new jsPDF();

  // 2) Title
  doc.setFontSize(16);
  doc.text("Nuggt Report", 14, 15);
  doc.setFontSize(12);
  doc.text("Generated by Nuggt Dashboard", 14, 23);

  // 3) If you want to include your extracted data as JSON text or table
  doc.setFontSize(12);
  doc.text("Extraction Results:", 14, 35);

  const extractionJson = JSON.stringify(extractedData, null, 2);
  const extractionLines = doc.splitTextToSize(extractionJson, 180);
  doc.text(extractionLines, 14, 42);

  // 4) Now we add a table for the queries
  const tableData = queries.map((q) => [
    q.search,
    // Truncate or format q.content if it's very long
    q.content.length > 120 ? q.content.substring(0, 120) + "..." : q.content,
    q.citations.join(", "),
  ]);

  autoTable(doc, {
    startY: 60 + extractionLines.length * 5, // move below the extracted data
    head: [["Query", "Answer (Truncated)", "Citations"]],
    body: tableData,
    styles: { fontSize: 10, cellWidth: "wrap" },
    columnStyles: {
      0: { cellWidth: 50 }, // Query
      1: { cellWidth: 70 }, // Answer
      2: { cellWidth: 50 }, // Citations
    },
  });

  // 5) Save the PDF
  doc.save("Nuggt_Report.pdf");
}
